{"ast":null,"code":"var _jsxFileName = \"/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Web Dev/RESTAPI - Film Explorer/src/components/FilmTableContainer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FilmTable from './FilmTable';\n\nfunction FilmTableContainer(_ref) {\n  var films = _ref.films,\n      searchTerm = _ref.searchTerm,\n      sortType = _ref.sortType,\n      setRatingFor = _ref.setRatingFor;\n  var displayedFilms = films;\n\n  if (searchTerm) {\n    var term = searchTerm.toLowerCase();\n    displayedFilms = displayedFilms.filter(function (film) {\n      var title = film.title.toLowerCase();\n      var desc = film.overview.toLowerCase();\n      var date = film.release_date;\n      return title.includes(term) || desc.includes(term) || date.includes(term);\n    });\n  }\n\n  if (sortType) {\n    displayedFilms = displayedFilms.sort(function (m1, m2) {\n      if (m1[sortType] < m2[sortType]) {\n        return -1;\n      } else if (m1[sortType] === m2[sortType]) {\n        return 0;\n      }\n\n      return 1;\n    });\n  }\n\n  return __jsx(FilmTable, {\n    films: displayedFilms,\n    setRatingFor: setRatingFor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  });\n}\n\n_c = FilmTableContainer;\nFilmTableContainer.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchTerm: PropTypes.string,\n  sortType: PropTypes.string,\n  setRatingFor: PropTypes.func.isRequired\n};\nFilmTableContainer.defaultProps = {\n  searchTerm: null,\n  sortType: null\n};\nexport default FilmTableContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmTableContainer\");","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Web Dev/RESTAPI - Film Explorer/src/components/FilmTableContainer.js"],"names":["React","PropTypes","FilmTable","FilmTableContainer","films","searchTerm","sortType","setRatingFor","displayedFilms","term","toLowerCase","filter","film","title","desc","overview","date","release_date","includes","sort","m1","m2","propTypes","arrayOf","object","isRequired","string","func","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,kBAAT,OAA2E;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,YAAgB,QAAhBA,YAAgB;AACzE,MAAIC,cAAc,GAAGJ,KAArB;;AACA,MAAIC,UAAJ,EAAgB;AACd,QAAMI,IAAI,GAAGJ,UAAU,CAACK,WAAX,EAAb;AACAF,IAAAA,cAAc,GAAGA,cAAc,CAACG,MAAf,CAAsB,UAACC,IAAD,EAAU;AAC/C,UAAMC,KAAK,GAAGD,IAAI,CAACC,KAAL,CAAWH,WAAX,EAAd;AACA,UAAMI,IAAI,GAAGF,IAAI,CAACG,QAAL,CAAcL,WAAd,EAAb;AACA,UAAMM,IAAI,GAAGJ,IAAI,CAACK,YAAlB;AACA,aAAOJ,KAAK,CAACK,QAAN,CAAeT,IAAf,KAAwBK,IAAI,CAACI,QAAL,CAAcT,IAAd,CAAxB,IAA+CO,IAAI,CAACE,QAAL,CAAcT,IAAd,CAAtD;AACD,KALgB,CAAjB;AAMD;;AAED,MAAIH,QAAJ,EAAc;AACZE,IAAAA,cAAc,GAAGA,cAAc,CAACW,IAAf,CAAoB,UAACC,EAAD,EAAKC,EAAL,EAAY;AAC/C,UAAID,EAAE,CAACd,QAAD,CAAF,GAAee,EAAE,CAACf,QAAD,CAArB,EAAiC;AAC/B,eAAO,CAAC,CAAR;AACD,OAFD,MAEO,IAAIc,EAAE,CAACd,QAAD,CAAF,KAAiBe,EAAE,CAACf,QAAD,CAAvB,EAAmC;AACxC,eAAO,CAAP;AACD;;AACD,aAAO,CAAP;AACD,KAPgB,CAAjB;AAQD;;AAED,SAAO,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEE,cAAlB;AAAkC,IAAA,YAAY,EAAED,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;KAxBQJ,kB;AA0BTA,kBAAkB,CAACmB,SAAnB,GAA+B;AAC7BlB,EAAAA,KAAK,EAAEH,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UADd;AAE7BpB,EAAAA,UAAU,EAAEJ,SAAS,CAACyB,MAFO;AAG7BpB,EAAAA,QAAQ,EAAEL,SAAS,CAACyB,MAHS;AAI7BnB,EAAAA,YAAY,EAAEN,SAAS,CAAC0B,IAAV,CAAeF;AAJA,CAA/B;AAOAtB,kBAAkB,CAACyB,YAAnB,GAAkC;AAChCvB,EAAAA,UAAU,EAAE,IADoB;AAEhCC,EAAAA,QAAQ,EAAE;AAFsB,CAAlC;AAKA,eAAeH,kBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FilmTable from './FilmTable';\n\nfunction FilmTableContainer({ films, searchTerm, sortType, setRatingFor }) {\n  let displayedFilms = films;\n  if (searchTerm) {\n    const term = searchTerm.toLowerCase();\n    displayedFilms = displayedFilms.filter((film) => {\n      const title = film.title.toLowerCase();\n      const desc = film.overview.toLowerCase();\n      const date = film.release_date;\n      return title.includes(term) || desc.includes(term) || date.includes(term);\n    });\n  }\n\n  if (sortType) {\n    displayedFilms = displayedFilms.sort((m1, m2) => {\n      if (m1[sortType] < m2[sortType]) {\n        return -1;\n      } else if (m1[sortType] === m2[sortType]) {\n        return 0;\n      }\n      return 1;\n    });\n  }\n\n  return <FilmTable films={displayedFilms} setRatingFor={setRatingFor} />;\n}\n\nFilmTableContainer.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n  searchTerm: PropTypes.string,\n  sortType: PropTypes.string,\n  setRatingFor: PropTypes.func.isRequired,\n};\n\nFilmTableContainer.defaultProps = {\n  searchTerm: null,\n  sortType: null,\n};\n\nexport default FilmTableContainer;\n"]},"metadata":{},"sourceType":"module"}