{"ast":null,"code":"var _jsxFileName = \"/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/components/IndexBar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Sections from '../components/Sections';\nimport Titles from '../components/Titles';\n/*\n  IndexBar.js\n\n  This component provides the section and title display that allows the user to \n  browse the available articles and select one for display. \n*/\n\nexport default function IndexBar(_ref) {\n  _s();\n\n  var collection = _ref.collection,\n      select = _ref.select,\n      currentArticle = _ref.currentArticle;\n\n  // create state to keep track of current selected section\n  var _useState = useState(),\n      section = _useState[0],\n      setSection = _useState[1]; // creates list of all titles to get list of sections\n\n\n  var allTitles = collection.map(function (e) {\n    return e.title;\n  });\n  var sections = [];\n  allTitles.forEach(function (e) {\n    if (!sections.includes(e.charAt(0))) {\n      sections.push(e.charAt(0).toUpperCase());\n    }\n  });\n  sections.sort(); // creates list of articles to display\n\n  var articles = collection.filter(function (e) {\n    if (e.title.charAt(0) === section) {\n      return true;\n    }\n\n    return false;\n  }).sort(function (a, b) {\n    return a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1;\n  }); // creates Message component to display message if section hasn't been selected.\n\n  var Message = function Message() {\n    return __jsx(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, \"Please select a section to view articles.\"));\n  }; // watches for currentArticle change to update section displayed\n\n\n  useEffect(function () {\n    if (currentArticle) {\n      setSection(currentArticle.title.charAt(0).toUpperCase());\n    }\n  }, [currentArticle]); // defines TitleRegion component based on section state\n\n  var TitleRegion = section && sections.includes(section) ? Titles : Message; // returns structured DOM\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Sections, {\n    sections: sections,\n    setSection: setSection,\n    select: select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(TitleRegion, {\n    articles: articles,\n    select: select,\n    section: section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(IndexBar, \"xQdwzsCmoWQCOxbn99nVwwdClxo=\");\n\n_c = IndexBar;\nIndexBar.propTypes = {\n  collection: PropTypes.array.isRequired,\n  select: PropTypes.func.isRequired,\n  currentArticle: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexBar\");","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/components/IndexBar.js"],"names":["useEffect","useState","PropTypes","Sections","Titles","IndexBar","collection","select","currentArticle","section","setSection","allTitles","map","e","title","sections","forEach","includes","charAt","push","toUpperCase","sort","articles","filter","a","b","toLowerCase","Message","TitleRegion","propTypes","array","isRequired","func","object"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport Sections from '../components/Sections';\nimport Titles from '../components/Titles';\n\n/*\n  IndexBar.js\n\n  This component provides the section and title display that allows the user to \n  browse the available articles and select one for display. \n*/\n\nexport default function IndexBar({ collection, select, currentArticle }) {\n  // create state to keep track of current selected section\n  const [section, setSection] = useState();\n\n  // creates list of all titles to get list of sections\n  const allTitles = collection.map(e => e.title);\n  const sections = [];\n  allTitles.forEach(e => {\n    if(!sections.includes(e.charAt(0))) {\n      sections.push(e.charAt(0).toUpperCase());\n    }\n  });\n  sections.sort();\n\n  // creates list of articles to display\n  const articles = collection.filter(e => {\n    if(e.title.charAt(0) === section) {\n      return true;\n    }\n    return false;\n  }).sort((a, b) => ((a.title.toLowerCase() > b.title.toLowerCase()) ? 1 : -1));\n\n  // creates Message component to display message if section hasn't been selected.\n  const Message = function Message() {\n    return (<main><p>Please select a section to view articles.</p></main>);\n  };\n\n  // watches for currentArticle change to update section displayed\n  useEffect(() => {\n    if(currentArticle) {\n      setSection(currentArticle.title.charAt(0).toUpperCase());\n    }\n  }, [currentArticle]);\n\n  \n  // defines TitleRegion component based on section state\n  const TitleRegion = (section && sections.includes(section)) ? Titles : Message;\n\n  // returns structured DOM\n  return (\n    <div>\n      <Sections sections={sections} setSection={setSection} select={select} />\n      <TitleRegion articles={articles} select={select} section={section}/>\n    </div>\n  );\n  \n}\n\nIndexBar.propTypes = {\n  collection: PropTypes.array.isRequired,\n  select: PropTypes.func.isRequired,\n  currentArticle: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}