{"ast":null,"code":"var _jsxFileName = \"/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport IndexBar from '../components/IndexBar';\nimport Article from '../components/Article';\nimport ButtonBar from '../components/ButtonBar';\nimport Editor from '../components/Editor';\nexport default function Home() {\n  // defines states\n  const {\n    0: currentArticle,\n    1: select\n  } = useState();\n  const {\n    0: view,\n    1: setView\n  } = useState(\"art\"); // creates Blank component so nothing is rendered if article isn't selected\n\n  const Blank = function Blank() {\n    return __jsx(React.Fragment, null);\n  }; // defines ArtRegion component based on article state\n\n\n  const ArtRegion = currentArticle ? Article : Blank; // defines handleClick\n\n  const handleClick = function handleClick(str) {\n    if (str === \"add\") {\n      setView(\"add\");\n    } else if (str === \"edit\") {\n      setView(\"edit\");\n    } else if (str === \"delete\") {\n      const delArt = async () => {\n        const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${currentArticle.id}`, {\n          method: 'DELETE'\n        });\n\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        select();\n      };\n\n      delArt();\n    }\n  }; // defines complete\n  // handles view changing and adding new articles\n\n\n  const complete = function complete(art) {\n    if (art === undefined) {\n      setView('art');\n    } else {\n      if (view === 'edit') {\n        const editArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${art.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(art),\n            headers: new Headers({\n              'Content-type': 'application/json'\n            })\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          select(art);\n        };\n\n        editArt();\n      } else {\n        const addArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles`, {\n            method: 'POST',\n            body: JSON.stringify(art),\n            headers: new Headers({\n              'Content-type': 'application/json'\n            })\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          const newArt = await response.json();\n          select(newArt);\n        };\n\n        addArt();\n      }\n\n      setView('art');\n    }\n  }; // determines what to display\n\n\n  let content;\n\n  if (view === 'add') {\n    content = __jsx(Editor, {\n      complete: complete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    });\n  } else if (view === 'edit' && currentArticle) {\n    content = __jsx(Editor, {\n      complete: complete,\n      article: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    });\n  } else {\n    content = __jsx(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, __jsx(IndexBar, {\n      select: select,\n      currentArticle: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), __jsx(ArtRegion, {\n      article: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), __jsx(ButtonBar, {\n      handleClick: handleClick,\n      allowEdit: currentArticle ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }));\n  } // returns structured DOM\n\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Simplepedia\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Simplepedia\"), content), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"CS 312 Assignment 2\"));\n}","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/pages/index.js"],"names":["React","useState","Head","styles","IndexBar","Article","ButtonBar","Editor","Home","currentArticle","select","view","setView","Blank","ArtRegion","handleClick","str","delArt","response","fetch","process","env","NEXT_PUBLIC_HOSTNAME","id","method","ok","Error","statusText","complete","art","undefined","editArt","body","JSON","stringify","headers","Headers","addArt","newArt","json","content","container"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Head from 'next/head';\n\nimport styles from '../styles/Home.module.css';\n\nimport IndexBar from '../components/IndexBar';\nimport Article from '../components/Article';\nimport ButtonBar from '../components/ButtonBar';\nimport Editor from '../components/Editor';\n\nexport default function Home() {\n  // defines states\n  const [currentArticle, select] = useState();\n  const [view, setView] = useState(\"art\");\n    \n  // creates Blank component so nothing is rendered if article isn't selected\n  const Blank = function Blank() {\n    return <></>;\n  }\n\n  // defines ArtRegion component based on article state\n  const ArtRegion = currentArticle ? Article : Blank;\n\n  // defines handleClick\n  const handleClick = function handleClick(str) {\n    if (str === \"add\") {\n      setView(\"add\");\n    } else if(str === \"edit\") {\n      setView(\"edit\");\n    } else if(str === \"delete\") {\n      const delArt = async () => {\n        const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${currentArticle.id}`, {\n          method: 'DELETE'\n        });\n\n        if(!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        select();\n      };\n      delArt();\n    }\n  };\n\n  // defines complete\n  // handles view changing and adding new articles\n  const complete = function complete(art) {\n    if(art === undefined) {\n      setView('art');\n    } else {\n      if(view === 'edit') {\n        const editArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${art.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(art),\n            headers: new Headers({ 'Content-type': 'application/json'}),\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          select(art);\n        };\n        editArt();\n      } else {\n        const addArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles`, {\n            method: 'POST',\n            body: JSON.stringify(art),\n            headers: new Headers({ 'Content-type': 'application/json'}),\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          const newArt = await response.json();\n          select(newArt);\n        };\n        addArt();\n      }\n      setView('art');\n    }\n  };\n\n  // determines what to display\n  let content;\n  if (view === 'add') { \n    content = (<Editor complete={complete} />);\n  } else if(view === 'edit' && currentArticle) {\n    content = (<Editor complete={complete} article={currentArticle} />);\n  } else {\n    content = (\n      <main>\n        <IndexBar select={select} currentArticle={currentArticle} />\n        <ArtRegion article={currentArticle} />\n        <ButtonBar handleClick={handleClick} allowEdit={currentArticle ? true : false}/>\n      </main>\n    );\n  }\n  \n  // returns structured DOM\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Simplepedia</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">Simplepedia</h1>\n        {content}  \n      </main>\n      \n      <footer>CS 312 Assignment 2</footer>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}