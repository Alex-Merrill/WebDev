{"ast":null,"code":"import nc from 'next-connect';\nimport { deleteArticle, updateArticle } from '../../../lib/backend-utils';\nimport { onError, cors } from '../../../lib/middleware';\nconst handler = nc({\n  onError\n}).use(cors).put(async (req, res) => {\n  const {\n    id\n  } = req.query;\n  const newArticle = req.body;\n  const count = await updateArticle(newArticle);\n\n  if (count === 0) {\n    res.status(404).end(`Article with id ${id} not found`);\n  } else {\n    res.status(200).end();\n  }\n}).delete(async (req, res) => {\n  const {\n    id\n  } = req.query;\n  const count = await deleteArticle(id);\n\n  if (count === 0) {\n    res.status(404).end(`Article with id ${id} not found`);\n  } else {\n    res.status(200).end();\n  }\n});\nexport default handler;","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Web Dev/RDMBS/src/pages/api/articles/[id].js"],"names":["nc","deleteArticle","updateArticle","onError","cors","handler","use","put","req","res","id","query","newArticle","body","count","status","end","delete"],"mappings":"AAAA,OAAOA,EAAP,MAAe,cAAf;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,4BAHP;AAIA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,yBAA9B;AAEA,MAAMC,OAAO,GAAGL,EAAE,CAAC;AAAEG,EAAAA;AAAF,CAAD,CAAF,CACfG,GADe,CACXF,IADW,EAEbG,GAFa,CAET,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB;AACA,QAAMC,UAAU,GAAGJ,GAAG,CAACK,IAAvB;AACA,QAAMC,KAAK,GAAG,MAAMZ,aAAa,CAACU,UAAD,CAAjC;;AAEA,MAAIE,KAAK,KAAK,CAAd,EAAiB;AACfL,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAqB,mBAAkBN,EAAG,YAA1C;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD;AACF,CAZa,EAabC,MAba,CAaN,OAAOT,GAAP,EAAYC,GAAZ,KAAoB;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAASF,GAAG,CAACG,KAAnB;AACA,QAAMG,KAAK,GAAG,MAAMb,aAAa,CAACS,EAAD,CAAjC;;AACA,MAAII,KAAK,KAAK,CAAd,EAAiB;AACfL,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAqB,mBAAkBN,EAAG,YAA1C;AACD,GAFD,MAEO;AACLD,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD;AACF,CArBa,CAAhB;AAuBA,eAAeX,OAAf","sourcesContent":["import nc from 'next-connect';\n\nimport {\n  deleteArticle,\n  updateArticle,\n} from '../../../lib/backend-utils';\nimport { onError, cors } from '../../../lib/middleware';\n\nconst handler = nc({ onError })\n.use(cors)\n  .put(async (req, res) => {\n    const { id } = req.query;\n    const newArticle = req.body;\n    const count = await updateArticle(newArticle);\n\n    if (count === 0) {\n      res.status(404).end(`Article with id ${id} not found`);\n    } else {\n      res.status(200).end();\n    }\n  })\n  .delete(async (req, res) => {\n    const { id } = req.query;\n    const count = await deleteArticle(id);\n    if (count === 0) {\n      res.status(404).end(`Article with id ${id} not found`);\n    } else {\n      res.status(200).end();\n    }\n  });\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}