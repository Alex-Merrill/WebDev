{"ast":null,"code":"/*\n\n  backend-utils.js\n\n  This is a collection of utility functions to be called on the server backend. These functions\n  interact directly with the database.\n\n  available functions:\n\n  getArticles - reads all of the articles out of the DB and returns them sorted by title\n  deleteArticle(id) - delete the article associated with the given id\n  updateArticle(article) - update the data store with changes in `article`\n  addArticle(article) - add the new `article` to the data store \n*/\nimport knexConfig from '../../knexfile';\nimport knexInitializer from 'knex';\nconst knex = knexInitializer(knexConfig[process.env.TESTING || \"development\" || 'development']);\n/**\n * Find all articles and sort them by title\n *\n * returns list of articles sorted by title\n */\n\nexport async function getArticles() {\n  const rows = await knex('Article').select();\n  return rows;\n}\n/**\n * Remove the article associated with the provided id from the data storage\n *\n * @param {number} id\n * returns the number of articles deleted\n */\n\nexport async function deleteArticle(id) {}\n/**\n * Update the data store with the provided article object\n *\n * @param {object} article\n * returns the number of articles updated\n */\n\nexport async function updateArticle(article) {}\n/**\n * Add a new article to the data store\n *\n * @param {number} article\n * returns the article with a new id attached\n */\n\nexport async function addArticle(article) {}","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/lib/backend-utils.js"],"names":["knexConfig","knexInitializer","knex","process","env","TESTING","getArticles","rows","select","deleteArticle","id","updateArticle","article","addArticle"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,gBAAvB;AACA,OAAOC,eAAP,MAA4B,MAA5B;AACA,MAAMC,IAAI,GAAGD,eAAe,CAC1BD,UAAU,CAACG,OAAO,CAACC,GAAR,CAAYC,OAAZ,qBAA+C,aAAhD,CADgB,CAA5B;AAIA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,WAAf,GAA6B;AAClC,QAAMC,IAAI,GAAG,MAAML,IAAI,CAAC,SAAD,CAAJ,CAAgBM,MAAhB,EAAnB;AACA,SAAOD,IAAP;AACD;AAGD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeE,aAAf,CAA6BC,EAA7B,EAAiC,CAEvC;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,aAAf,CAA6BC,OAA7B,EAAsC,CAE5C;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,UAAf,CAA0BD,OAA1B,EAAmC,CAEzC","sourcesContent":["/*\n\n  backend-utils.js\n\n  This is a collection of utility functions to be called on the server backend. These functions\n  interact directly with the database.\n\n  available functions:\n\n  getArticles - reads all of the articles out of the DB and returns them sorted by title\n  deleteArticle(id) - delete the article associated with the given id\n  updateArticle(article) - update the data store with changes in `article`\n  addArticle(article) - add the new `article` to the data store \n*/\n\nimport knexConfig from '../../knexfile';\nimport knexInitializer from 'knex';\nconst knex = knexInitializer(\n  knexConfig[process.env.TESTING || process.env.NODE_ENV || 'development']\n);\n\n/**\n * Find all articles and sort them by title\n *\n * returns list of articles sorted by title\n */\nexport async function getArticles() {\n  const rows = await knex('Article').select();\n  return rows;\n}\n\n\n/**\n * Remove the article associated with the provided id from the data storage\n *\n * @param {number} id\n * returns the number of articles deleted\n */\nexport async function deleteArticle(id) {\n  \n}\n\n/**\n * Update the data store with the provided article object\n *\n * @param {object} article\n * returns the number of articles updated\n */\nexport async function updateArticle(article) {\n  \n}\n\n/**\n * Add a new article to the data store\n *\n * @param {number} article\n * returns the article with a new id attached\n */\nexport async function addArticle(article) {\n  \n}\n"]},"metadata":{},"sourceType":"module"}