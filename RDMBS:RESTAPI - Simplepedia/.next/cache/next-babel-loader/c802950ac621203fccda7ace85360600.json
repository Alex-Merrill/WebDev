{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport IndexBar from '../components/IndexBar';\nimport Article from '../components/Article';\nimport ButtonBar from '../components/ButtonBar';\nimport Editor from '../components/Editor';\nexport default function Home() {\n  _s();\n\n  // defines states\n  var _useState = useState(),\n      currentArticle = _useState[0],\n      select = _useState[1];\n\n  var _useState2 = useState(\"art\"),\n      view = _useState2[0],\n      setView = _useState2[1]; // creates Blank component so nothing is rendered if article isn't selected\n\n\n  var Blank = function Blank() {\n    return __jsx(React.Fragment, null);\n  }; // defines ArtRegion component based on article state\n\n\n  var ArtRegion = currentArticle ? Article : Blank; // defines handleClick\n\n  var handleClick = function handleClick(str) {\n    if (str === \"add\") {\n      setView(\"add\");\n    } else if (str === \"edit\") {\n      setView(\"edit\");\n    } else if (str === \"delete\") {\n      var delArt = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles/\").concat(currentArticle.id), {\n                    method: 'DELETE'\n                  });\n\n                case 2:\n                  response = _context.sent;\n\n                  if (response.ok) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  throw new Error(response.statusText);\n\n                case 5:\n                  select();\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function delArt() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      delArt();\n    }\n  }; // defines complete\n  // handles view changing and adding new articles\n\n\n  var complete = function complete(art) {\n    if (art === undefined) {\n      setView('art');\n    } else {\n      if (view === 'edit') {\n        var editArt = /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var response;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles/\").concat(art.id), {\n                      method: 'PUT',\n                      body: JSON.stringify(art),\n                      headers: new Headers({\n                        'Content-type': 'application/json'\n                      })\n                    });\n\n                  case 2:\n                    response = _context2.sent;\n\n                    if (response.ok) {\n                      _context2.next = 5;\n                      break;\n                    }\n\n                    throw new Error(response.statusText);\n\n                  case 5:\n                    select(art);\n\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function editArt() {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n\n        editArt();\n      } else {\n        var addArt = /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            var response, newArt;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles\"), {\n                      method: 'POST',\n                      body: JSON.stringify(art),\n                      headers: new Headers({\n                        'Content-type': 'application/json'\n                      })\n                    });\n\n                  case 2:\n                    response = _context3.sent;\n\n                    if (response.ok) {\n                      _context3.next = 5;\n                      break;\n                    }\n\n                    throw new Error(response.statusText);\n\n                  case 5:\n                    _context3.next = 7;\n                    return response.json();\n\n                  case 7:\n                    newArt = _context3.sent;\n                    select(newArt);\n\n                  case 9:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function addArt() {\n            return _ref3.apply(this, arguments);\n          };\n        }();\n\n        addArt();\n      }\n\n      setView('art');\n    }\n  }; // determines what to display\n\n\n  var content;\n\n  if (view === 'add') {\n    content = __jsx(Editor, {\n      complete: complete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }\n    });\n  } else if (view === 'edit' && currentArticle) {\n    content = __jsx(Editor, {\n      complete: complete,\n      article: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }\n    });\n  } else {\n    content = __jsx(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, __jsx(IndexBar, {\n      select: select,\n      currentArticle: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), __jsx(ArtRegion, {\n      article: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), __jsx(ButtonBar, {\n      handleClick: handleClick,\n      allowEdit: currentArticle ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }));\n  } // returns structured DOM\n\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Simplepedia\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Simplepedia\"), content), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"CS 312 Assignment 2\"));\n}\n\n_s(Home, \"Db0Z+hc/EkLwAhnfLI9iiyDxwB0=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/pages/index.js"],"names":["React","useState","Head","styles","IndexBar","Article","ButtonBar","Editor","Home","currentArticle","select","view","setView","Blank","ArtRegion","handleClick","str","delArt","fetch","process","env","NEXT_PUBLIC_HOSTNAME","id","method","response","ok","Error","statusText","complete","art","undefined","editArt","body","JSON","stringify","headers","Headers","addArt","json","newArt","content","container"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport Head from 'next/head';\n\nimport styles from '../styles/Home.module.css';\n\nimport IndexBar from '../components/IndexBar';\nimport Article from '../components/Article';\nimport ButtonBar from '../components/ButtonBar';\nimport Editor from '../components/Editor';\n\nexport default function Home() {\n  // defines states\n  const [currentArticle, select] = useState();\n  const [view, setView] = useState(\"art\");\n    \n  // creates Blank component so nothing is rendered if article isn't selected\n  const Blank = function Blank() {\n    return <></>;\n  }\n\n  // defines ArtRegion component based on article state\n  const ArtRegion = currentArticle ? Article : Blank;\n\n  // defines handleClick\n  const handleClick = function handleClick(str) {\n    if (str === \"add\") {\n      setView(\"add\");\n    } else if(str === \"edit\") {\n      setView(\"edit\");\n    } else if(str === \"delete\") {\n      const delArt = async () => {\n        const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${currentArticle.id}`, {\n          method: 'DELETE'\n        });\n\n        if(!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        select();\n      };\n      delArt();\n    }\n  };\n\n  // defines complete\n  // handles view changing and adding new articles\n  const complete = function complete(art) {\n    if(art === undefined) {\n      setView('art');\n    } else {\n      if(view === 'edit') {\n        const editArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${art.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(art),\n            headers: new Headers({ 'Content-type': 'application/json'}),\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          select(art);\n        };\n        editArt();\n      } else {\n        const addArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles`, {\n            method: 'POST',\n            body: JSON.stringify(art),\n            headers: new Headers({ 'Content-type': 'application/json'}),\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          const newArt = await response.json();\n          select(newArt);\n        };\n        addArt();\n      }\n      setView('art');\n    }\n  };\n\n  // determines what to display\n  let content;\n  if (view === 'add') { \n    content = (<Editor complete={complete} />);\n  } else if(view === 'edit' && currentArticle) {\n    content = (<Editor complete={complete} article={currentArticle} />);\n  } else {\n    content = (\n      <main>\n        <IndexBar select={select} currentArticle={currentArticle} />\n        <ArtRegion article={currentArticle} />\n        <ButtonBar handleClick={handleClick} allowEdit={currentArticle ? true : false}/>\n      </main>\n    );\n  }\n  \n  // returns structured DOM\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Simplepedia</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">Simplepedia</h1>\n        {content}  \n      </main>\n      \n      <footer>CS 312 Assignment 2</footer>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}