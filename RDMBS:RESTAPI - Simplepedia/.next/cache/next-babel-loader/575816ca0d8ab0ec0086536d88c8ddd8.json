{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport IndexBar from '../components/IndexBar';\nimport Article from '../components/Article';\nimport ButtonBar from '../components/ButtonBar';\nimport Editor from '../components/Editor';\nexport default function Home() {\n  _s();\n\n  // defines states\n  var _useState = useState([]),\n      collection = _useState[0],\n      setCollection = _useState[1];\n\n  var _useState2 = useState(),\n      currentArticle = _useState2[0],\n      select = _useState2[1];\n\n  var _useState3 = useState(\"art\"),\n      view = _useState3[0],\n      setView = _useState3[1]; // fetch data from basin api\n\n\n  useEffect(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles\"));\n\n              case 2:\n                response = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(response.statusText);\n\n              case 5:\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context.sent;\n                setCollection(data);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  }, []); // creates Blank component so nothing is rendered if article isn't selected\n\n  var Blank = function Blank() {\n    return __jsx(React.Fragment, null);\n  }; // defines ArtRegion component based on article state\n\n\n  var ArtRegion = currentArticle ? Article : Blank; // defines handleClick\n\n  var handleClick = function handleClick(str) {\n    if (str === \"add\") {\n      setView(\"add\");\n    } else if (str === \"edit\") {\n      setView(\"edit\");\n    } else if (str === \"delete\") {\n      var delArt = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var response, newColl;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles/\").concat(currentArticle.id), {\n                    method: 'DELETE'\n                  });\n\n                case 2:\n                  response = _context2.sent;\n\n                  if (response.ok) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  throw new Error(response.statusText);\n\n                case 5:\n                  newColl = collection.filter(function (e) {\n                    return e !== currentArticle;\n                  });\n                  setCollection(newColl);\n                  select();\n\n                case 8:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function delArt() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      delArt();\n      setView(\"art\");\n    }\n  }; // defines complete\n  // handles view changing and adding new articles\n\n\n  var complete = function complete(art) {\n    if (art === undefined) {\n      setView('art');\n    } else {\n      if (view === 'edit') {\n        var editArt = /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n            var response, newColl;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.next = 2;\n                    return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles/\").concat(art.id), {\n                      method: 'PUT',\n                      body: JSON.stringify(art),\n                      headers: new Headers({\n                        'Content-type': 'application/json'\n                      })\n                    });\n\n                  case 2:\n                    response = _context3.sent;\n\n                    if (response.ok) {\n                      _context3.next = 5;\n                      break;\n                    }\n\n                    throw new Error(response.statusText);\n\n                  case 5:\n                    newColl = collection.map(function (article) {\n                      if (article.id === art.id) {\n                        return art;\n                      }\n\n                      return article;\n                    });\n                    setCollection(newColl);\n                    select(art);\n\n                  case 8:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3);\n          }));\n\n          return function editArt() {\n            return _ref3.apply(this, arguments);\n          };\n        }();\n\n        editArt();\n      } else {\n        var addArt = /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n            var response, newArt, newColl;\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    _context4.next = 2;\n                    return fetch(\"\".concat(process.env.NEXT_PUBLIC_HOSTNAME, \"api/articles\"), {\n                      method: 'POST',\n                      body: JSON.stringify(art),\n                      headers: new Headers({\n                        'Content-type': 'application/json'\n                      })\n                    });\n\n                  case 2:\n                    response = _context4.sent;\n\n                    if (response.ok) {\n                      _context4.next = 5;\n                      break;\n                    }\n\n                    throw new Error(response.statusText);\n\n                  case 5:\n                    _context4.next = 7;\n                    return response.json();\n\n                  case 7:\n                    newArt = _context4.sent;\n                    newColl = [].concat(_toConsumableArray(collection), [newArt]);\n                    setCollection(newColl);\n                    select(newArt);\n\n                  case 11:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n\n          return function addArt() {\n            return _ref4.apply(this, arguments);\n          };\n        }();\n\n        addArt();\n      }\n\n      setView('art');\n    }\n  }; // determines what to display\n\n\n  var content;\n\n  if (view === 'add') {\n    content = __jsx(Editor, {\n      complete: complete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }\n    });\n  } else if (view === 'edit' && currentArticle) {\n    var article = currentArticle;\n    content = __jsx(Editor, {\n      complete: complete,\n      article: article,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 16\n      }\n    });\n  } else {\n    content = __jsx(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, __jsx(IndexBar, {\n      collection: collection,\n      select: select,\n      currentArticle: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }), __jsx(ArtRegion, {\n      article: currentArticle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), __jsx(ButtonBar, {\n      handleClick: handleClick,\n      allowEdit: currentArticle ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }));\n  } // returns structured DOM\n\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Simplepedia\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, \"Simplepedia\"), content));\n}\n\n_s(Home, \"1gALzWSb0b+WeIE96BR0Q58AxL0=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Practicals/practical-07-Alex-Merrill/src/pages/index.js"],"names":["React","useState","useEffect","Head","styles","IndexBar","Article","ButtonBar","Editor","Home","collection","setCollection","currentArticle","select","view","setView","getData","fetch","process","env","NEXT_PUBLIC_HOSTNAME","response","ok","Error","statusText","json","data","Blank","ArtRegion","handleClick","str","delArt","id","method","newColl","filter","e","complete","art","undefined","editArt","body","JSON","stringify","headers","Headers","map","article","addArt","newArt","content","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Head from 'next/head';\n\nimport styles from '../styles/Home.module.css';\n\nimport IndexBar from '../components/IndexBar';\nimport Article from '../components/Article';\nimport ButtonBar from '../components/ButtonBar';\nimport Editor from '../components/Editor';\n\nexport default function Home() {\n  // defines states\n  const [collection, setCollection] = useState([]);\n  const [currentArticle, select] = useState();\n  const [view, setView] = useState(\"art\");\n  \n  // fetch data from basin api\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles`);\n  \n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n  \n      const data = await response.json();\n      setCollection(data);\n    };\n    getData();\n  }, []);\n  \n    \n  // creates Blank component so nothing is rendered if article isn't selected\n  const Blank = function Blank() {\n    return <></>;\n  }\n\n  // defines ArtRegion component based on article state\n  const ArtRegion = currentArticle ? Article : Blank;\n\n  // defines handleClick\n  const handleClick = function handleClick(str) {\n    if (str === \"add\") {\n      setView(\"add\");\n    } else if(str === \"edit\") {\n      setView(\"edit\");\n    } else if(str === \"delete\") {\n      const delArt = async () => {\n        const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${currentArticle.id}`, {\n          method: 'DELETE'\n        });\n\n        if(!response.ok) {\n          throw new Error(response.statusText);\n        }\n\n        const newColl = collection.filter((e) => {\n          return e !== currentArticle;\n        });\n        setCollection(newColl);\n        select();\n      };\n      delArt();\n      setView(\"art\");\n    }\n  };\n\n  // defines complete\n  // handles view changing and adding new articles\n  const complete = function complete(art) {\n    if(art === undefined) {\n      setView('art');\n    } else {\n      if(view === 'edit') {\n        const editArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles/${art.id}`, {\n            method: 'PUT',\n            body: JSON.stringify(art),\n            headers: new Headers({ 'Content-type': 'application/json'}),\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          const newColl = collection.map((article) => {\n            if(article.id === art.id) {\n              return art;\n            }\n            return article;\n          });\n          setCollection(newColl);\n          select(art);\n        };\n        editArt();\n      } else {\n        const addArt = async () => {\n          const response = await fetch(`${process.env.NEXT_PUBLIC_HOSTNAME}api/articles`, {\n            method: 'POST',\n            body: JSON.stringify(art),\n            headers: new Headers({ 'Content-type': 'application/json'}),\n          });\n\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n\n          const newArt = await response.json();\n\n          const newColl = [...collection, newArt];\n          setCollection(newColl);\n          select(newArt);\n        };\n        addArt();\n      }\n      setView('art');\n    }\n  };\n\n  // determines what to display\n  let content;\n  if (view === 'add') { \n    content = (<Editor complete={complete} />);\n  } else if(view === 'edit' && currentArticle) {\n    const article = currentArticle;\n    content = (<Editor complete={complete} article={article} />);\n  } else {\n    content = (\n      <main>\n        <IndexBar collection={collection} select={select} currentArticle={currentArticle} />\n        <ArtRegion article={currentArticle} />\n        <ButtonBar handleClick={handleClick} allowEdit={currentArticle ? true : false}/>\n      </main>\n    );\n  }\n  \n  // returns structured DOM\n  return (\n    <div className={styles.container}>\n      <Head>\n        <title>Simplepedia</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">Simplepedia</h1>\n        {content}  \n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}