{"ast":null,"code":"var _jsxFileName = \"/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Web Dev/RDMBS/src/components/ButtonBar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\n/*\n  ButtonBar.js\n\n  The ButtonBar component allows users to switch between adding\n  an article and viewing the articles.\n*/\n\nexport default function ButtonBar(_ref) {\n  var handleClick = _ref.handleClick,\n      allowEdit = _ref.allowEdit;\n  var contents;\n\n  if (allowEdit) {\n    contents = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        handleClick('add');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"Add\"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        handleClick('edit');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Edit\"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        handleClick('delete');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"Delete\"));\n  } else {\n    contents = __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      type: \"button\",\n      onClick: function onClick() {\n        handleClick('add');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Add\"));\n  } // returns structured DOM\n\n\n  return contents;\n}\n_c = ButtonBar;\nButtonBar.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  allowEdit: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonBar\");","map":{"version":3,"sources":["/Users/alexmerrill/Desktop/Middlebury/20-21/SWD/Web Dev/RDMBS/src/components/ButtonBar.js"],"names":["PropTypes","ButtonBar","handleClick","allowEdit","contents","propTypes","func","isRequired","bool"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,SAAT,OAA+C;AAAA,MAA1BC,WAA0B,QAA1BA,WAA0B;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAE5D,MAAIC,QAAJ;;AACA,MAAGD,SAAH,EAAc;AACZC,IAAAA,QAAQ,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,mBAAM;AAAEF,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,mBAAM;AAAEA,QAAAA,WAAW,CAAC,MAAD,CAAX;AAAqB,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,mBAAM;AAAEA,QAAAA,WAAW,CAAC,QAAD,CAAX;AAAuB,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF;AAOD,GARD,MAQO;AACLE,IAAAA,QAAQ,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,mBAAM;AAAEF,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoB,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAKD,GAjB2D,CAmB5D;;;AACA,SAAQE,QAAR;AAED;KAtBuBH,S;AAwBxBA,SAAS,CAACI,SAAV,GAAsB;AACpBH,EAAAA,WAAW,EAAEF,SAAS,CAACM,IAAV,CAAeC,UADR;AAEpBJ,EAAAA,SAAS,EAAEH,SAAS,CAACQ;AAFD,CAAtB","sourcesContent":["import PropTypes from 'prop-types';\n\n/*\n  ButtonBar.js\n\n  The ButtonBar component allows users to switch between adding\n  an article and viewing the articles.\n*/\n\nexport default function ButtonBar({ handleClick, allowEdit }) {\n  \n  let contents;\n  if(allowEdit) {\n    contents = (\n      <div>\n        <button type=\"button\" onClick={() => { handleClick('add') }}>Add</button>\n        <button type=\"button\" onClick={() => { handleClick('edit') }}>Edit</button>\n        <button type=\"button\" onClick={() => { handleClick('delete') }}>Delete</button>\n      </div>\n    );\n  } else {\n    contents = (\n      <div>\n        <button type=\"button\" onClick={() => { handleClick('add') }}>Add</button>\n      </div>\n    );\n  }\n\n  // returns structured DOM\n  return (contents);\n\n}\n\nButtonBar.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  allowEdit: PropTypes.bool\n};\n\n"]},"metadata":{},"sourceType":"module"}